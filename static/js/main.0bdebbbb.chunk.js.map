{"version":3,"sources":["data/data.js","components/utils/graph.js","components/menus/AboutMenu.js","components/menus/ImportExportMenu.js","components/menus/ClearMenu.js","components/menus/RecipeRow.js","components/utils/helper.js","components/menus/RecipeMenu.js","components/menus/CalculatorMenu.js","components/menus/EditMenu.js","components/menus/SettingsMenu.js","components/menus/MenuDialog.js","components/DataTable/DataTableCell.js","components/DataTable/index.js","components/DataTable/DataTable.js","components/NavContent.js","components/HeaderContent.js","components/utils/overclock.js","App.js","index.js"],"names":["TierNames","Voltages","Recipes","step","machineName","machineTier","overclock","rft","time","inputs","name","quantity","unit","outputs","targetMachines","DefaultTheme","typography","htmlFontSize","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","palette","type","primary","light","main","dark","contrastText","secondary","Config","sidebar","anchor","width","variant","collapsible","collapsedWidth","content","persistentBehavior","header","position","clipped","offsetHeight","GenerateGraph","recipes","directedGraph","DirectedGraph","upgradeToMulti","forEach","recipe","addNode","Number","timeoc","visitedCount","edgeGraph","graph","forEachNode","source","sourceAttributes","output","target","targetAttributes","input","addDirectedEdge","inputQuantity","inputTime","outputQuantity","outputTime","GenerateEdges","adjList","edges","node","forEachEdge","edge","attributes","push","Object","values","FindAdjList","cycles","findCircuits","tmpGraph","cycle","dropEdge","FixGraph","RemoveCycles","reverse","MachineRequirements","machineTotals","machineSteps","length","forEachOutEdge","sort","FindInitialInputs","FindFinalOutputs","tier","machine","recipeRft","rftoc","Math","ceil","toFixed","SettingsMenu","React","memo","props","DialogTitle","title","DialogContent","DialogContentText","Link","rel","href","DialogActions","Button","onClick","handleClose","color","ImportExportMenu","useState","data","setData","handleUpdate","Divider","style","margin","TextField","multiline","fullWidth","size","rowsMax","value","onChange","event","array","split","uint8array","Uint8Array","from","JSON","parse","decompress","jString","stringify","compressedData","compress","toString","ClearMenu","handleClear","regAnyNumber","regWholeNumber","RecipeRow","handleQuantity","test","item","state","setState","handleUpdateItems","id","handleUnit","handleName","unitLabelRef","createRef","unitLabelWidth","this","current","offsetWidth","FormControl","className","classes","formControlSmall","error","label","required","InputLabel","ref","Select","labelWidth","placeholder","MenuItem","formControl","Component","withStyles","theme","spacing","minWidth","maxWidth","pushDefault","n","newArray","i","slice","useStyles","makeStyles","RecipeMenu","isEu","setIsEu","setMachineName","setMachineTier","setOverclock","setRft","setTime","numInputs","setNumInputs","numOutputs","setNumOutputs","valid","setValid","validName","setValidName","validInputs","setValidInputs","validOutputs","setValidOutputs","setInputs","setOutputs","tierLabel","useRef","tierLabelWidth","setTierLabelWidth","useEffect","handleUpdateInputs","newInputs","handleValidation","handleUpdateOutputs","newOutputs","handleUpdateMachineName","map","index","key","FormControlLabel","control","Checkbox","checked","labelPlacement","prevInputs","prevOutputs","Grid","container","direction","justify","alignitems","xs","containerHeight","window","innerHeight","elementHeight","newRecipe","disabled","CalculatorMenu","requirements","setRequirements","setTargetMachines","keys","targetItem","setTargetItem","targetQuantity","setTargetQuantity","targetRatio","setTargetRatio","targetOps","setTargetOps","targetStored","setTargetStored","targetLabelWidth","setTargetLabelWidth","targetLabel","regAnyPositiveNumber","alignItems","handleItem","entries","setNodeAttribute","targets","calculatedGraph","copy","CalculateTarget","sourceNode","calculatorTargetMachines","getNodeAttributes","forEachOutNeighbor","targetNode","edgeAttributes","getEdgeAttributes","getNodeAttribute","inDegree","updateNodeAttribute","Fragment","EditMenu","rowData","indexOf","updatedRecipe","themeType","Typography","Switch","handleTheme","MenuDialog","contentType","isOpen","Dialog","disableBackdropClick","fullScreen","open","onClose","AboutMenu","handleEdit","DataTableCell","items","DataTable","handleDialogOpen","editable","dialog","handleDialogClose","columns","field","readonly","lookup","assign","customFilterAndSearch","search","toUpperCase","render","editComponent","found","includes","Array","prevProps","prevState","isEqual","Paper","my","actions","icon","tooltip","temp","onRowDelete","oldData","Promise","resolve","reject","setTimeout","splice","localization","body","emptyDataSourceMessage","options","actionsColumnIndex","maxBodyHeight","paging","pageSizeOptions","showTitle","sorting","tableLayout","NavContent","setOpen","setTitle","setType","setSize","List","ListItem","button","ListItemIcon","ListItemText","primaryTypographyProps","noWrap","url","location","fontWeight","grow","flexGrow","substring","AddOverclock","oc","EUt","tierIndex","duration","resultEUt","resultDuration","multiplier","eut","ticks","Overclock","App","toggleDarkTheme","localStorage","setItem","handleCollapse","collapsed","newRecipes","getItem","storedRecipes","headers","Headers","muiTheme","createMuiTheme","CssBaseline","config","initialCollapsed","sidebarStyles","Toolbar","headerStyles","leftTrigger","Container","Box","onChangeOC","handleOverclock","onChangeTier","handleTier","document","querySelector"],"mappings":"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","file":"static/js/main.0bdebbbb.chunk.js","sourcesContent":["const TierNames = [\r\n  'N/A',\r\n  'ULV',\r\n  'LV',\r\n  'MV',\r\n  'HV',\r\n  'EV',\r\n  'IV',\r\n  'LuV',\r\n  'ZPMV',\r\n  'UV',\r\n];\r\n\r\nconst Voltages = [8, 32, 128, 512, 2048, 8192, 32768, 131072, 524288];\r\n\r\nconst Recipes = [\r\n  {\r\n    step: 0,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Cobblestone',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 1,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Gravel',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 2,\r\n    machineName: 'Macerator',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 0.8,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 3,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: true,\r\n    rft: 16,\r\n    time: 6.4,\r\n    inputs: [\r\n      {\r\n        name: 'Sand',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 4,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 60,\r\n    time: 1,\r\n    inputs: [\r\n      {\r\n        name: 'Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Water',\r\n        quantity: 1000,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 5,\r\n    machineName: 'Electrolyzer',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Glass',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 6,\r\n    machineName: 'Fluid Extractor',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 128,\r\n    time: 2,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 7,\r\n    machineName: 'Chemical Reactor',\r\n    machineTier: 3,\r\n    overclock: false,\r\n    rft: 400,\r\n    time: 5,\r\n    inputs: [\r\n      {\r\n        name: 'Quartz',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Resonant Ender',\r\n        quantity: 250,\r\n        unit: 'mb',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 8,\r\n    machineName: 'Furnace',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 40,\r\n    time: 3.2,\r\n    inputs: [\r\n      {\r\n        name: 'Resonant Clathrate',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 9,\r\n    machineName: 'Alloy Smelter',\r\n    machineTier: 2,\r\n    overclock: false,\r\n    rft: 96,\r\n    time: 12,\r\n    inputs: [\r\n      {\r\n        name: 'Pulsating Dust',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n      {\r\n        name: 'Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 4,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 10,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 11,\r\n    machineName: 'Simulation Chamber',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 2048,\r\n    time: 15,\r\n    inputs: [\r\n      {\r\n        name: 'Polymer Clay',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 0.3,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 12,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Ender Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Ender Pearl',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 13,\r\n    machineName: 'Loot Fabricator',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 2.7,\r\n    inputs: [\r\n      {\r\n        name: 'Shulker Pristine',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 6,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n  {\r\n    step: 14,\r\n    machineName: 'Numismatic Dynamo',\r\n    machineTier: 0,\r\n    overclock: false,\r\n    rft: 0,\r\n    time: 10.32,\r\n    inputs: [\r\n      {\r\n        name: 'Diamond',\r\n        quantity: 1,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    outputs: [\r\n      {\r\n        name: 'RF/t',\r\n        quantity: 12500,\r\n        unit: 'b',\r\n      },\r\n    ],\r\n    targetMachines: 1,\r\n  },\r\n];\r\n\r\nconst DefaultTheme = {\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 700,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff5c8d',\r\n      main: '#d81b60',\r\n      dark: '#a00037',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n};\r\n\r\nconst Config = {\r\n  sidebar: {\r\n    anchor: 'left',\r\n    width: 256,\r\n    variant: 'permanent',\r\n    collapsible: true,\r\n    collapsedWidth: 64,\r\n  },\r\n  content: { persistentBehavior: 'fit' },\r\n  header: {\r\n    position: 'fixed',\r\n    clipped: false,\r\n    persistentBehavior: 'fit',\r\n    offsetHeight: 64,\r\n  },\r\n};\r\n\r\nexport { TierNames, Voltages, Recipes, DefaultTheme, Config };\r\n","import { DirectedGraph } from 'graphology';\r\nimport { reverse } from 'graphology-operators';\r\nimport findCircuits from 'elementary-circuits-directed-graph';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\n/**\r\n * Returns a directed multigraph for recipe calculations.\r\n *\r\n * @export\r\n * @param {*} recipes - Array of recipe objects\r\n * @returns\r\n */\r\nfunction GenerateGraph(recipes) {\r\n  let directedGraph = new DirectedGraph();\r\n  directedGraph.upgradeToMulti();\r\n\r\n  recipes.forEach((recipe) => {\r\n    directedGraph.addNode(Number(recipe.step), {\r\n      inputs: recipe.inputs,\r\n      machineName: recipe.machineName,\r\n      machineTier: recipe.machineTier,\r\n      outputs: recipe.outputs,\r\n      targetMachines: 1,\r\n      time: recipe.overclock ? recipe.timeoc : recipe.time,\r\n      visitedCount: 0,\r\n    });\r\n  });\r\n\r\n  let edgeGraph = GenerateEdges(directedGraph);\r\n  let reversedGraph = reverse(edgeGraph);\r\n  let acyclicGraph = RemoveCycles(reversedGraph);\r\n\r\n  return acyclicGraph;\r\n}\r\n\r\n/**\r\n * Generates edges based on recipe input and output objects via direct linking.\r\n *\r\n * @param {*} graph - A directed multigraph with no edges.\r\n * @returns\r\n */\r\nfunction GenerateEdges(graph) {\r\n  let edgeGraph = graph;\r\n\r\n  edgeGraph.forEachNode((source, sourceAttributes) => {\r\n    sourceAttributes.outputs.forEach((output) => {\r\n      edgeGraph.forEachNode((target, targetAttributes) => {\r\n        if (source !== target) {\r\n          targetAttributes.inputs.forEach((input) => {\r\n            if (input.name === output.name) {\r\n              edgeGraph.addDirectedEdge(source, target, {\r\n                name: input.name,\r\n                inputQuantity: input.quantity,\r\n                inputTime: targetAttributes.time,\r\n                outputQuantity: output.quantity,\r\n                outputTime: sourceAttributes.time,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return edgeGraph;\r\n}\r\n\r\n/**\r\n * Converts a directed multigraph into a directed acyclic multigraph.\r\n *\r\n * @param {*} graph\r\n * @returns\r\n */\r\nfunction RemoveCycles(graph) {\r\n  let adjList = FindAdjList(graph);\r\n  let cycles = findCircuits(adjList);\r\n\r\n  if (cycles) {\r\n    let acyclicGraph = FixGraph(graph, cycles);\r\n    return acyclicGraph;\r\n  } else {\r\n    return graph;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a list of adjacent edges.\r\n *\r\n * @param {*} graph\r\n * @returns\r\n */\r\nfunction FindAdjList(graph) {\r\n  let edges = [];\r\n\r\n  graph.forEachNode((node) => {\r\n    edges[node] = [];\r\n  });\r\n\r\n  graph.forEachEdge(\r\n    (edge, attributes, source, target, sourceAttributes, targetAttributes) => {\r\n      edges[source].push(Number(target));\r\n    }\r\n  );\r\n  let adjList = Object.values(edges);\r\n\r\n  return adjList;\r\n}\r\n\r\n/**\r\n * Removes cyclic edges from a graph.\r\n *\r\n * @param {*} graph\r\n * @param {*} cycles\r\n * @returns\r\n */\r\nfunction FixGraph(graph, cycles) {\r\n  let tmpGraph = graph;\r\n\r\n  for (let cycle of cycles) {\r\n    let source = cycle[0];\r\n    let target = cycle[1];\r\n\r\n    let edges = tmpGraph.edges(source, target);\r\n    edges.forEach((edge) => {\r\n      tmpGraph.dropEdge(edge);\r\n    });\r\n  }\r\n\r\n  return tmpGraph;\r\n}\r\n\r\n/**\r\n * Returns an object containing totals for machines per step, machines in chain, rf/t, inputs and outputs.\r\n *\r\n * @param {*} recipes\r\n * @param {*} graph\r\n * @returns\r\n */\r\nfunction MachineRequirements(recipes, graph) {\r\n  let machineTotals = [];\r\n  let machineSteps = [];\r\n  let rft = 0;\r\n  let inputs = [];\r\n  let outputs = [];\r\n\r\n  if (typeof recipes === 'undefined' || recipes.length === 0) {\r\n    return { machineTotals, machineSteps, rft, inputs, outputs };\r\n  }\r\n\r\n  inputs = FindInitialInputs(graph);\r\n  outputs = FindFinalOutputs(graph);\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    let tier = TierNames[attributes.machineTier];\r\n    let prefix = tier !== 'N/A' ? tier + ' ' : '';\r\n    let machineName = attributes.machineName;\r\n    let machine = prefix + machineName;\r\n    let recipe = recipes[node];\r\n    let recipeRft = recipe.overclock ? recipe.rftoc : recipe.rft;\r\n\r\n    if (!(machine in machineTotals)) {\r\n      machineTotals[machine] = Math.ceil(attributes.targetMachines);\r\n    } else {\r\n      machineTotals[machine] =\r\n        machineTotals[machine] + Math.ceil(attributes.targetMachines);\r\n    }\r\n\r\n    machineSteps[node] =\r\n      machine +\r\n      ' ' +\r\n      attributes.targetMachines.toFixed(2) +\r\n      ' (' +\r\n      Math.ceil(attributes.targetMachines) +\r\n      ')';\r\n\r\n    rft = rft + Math.ceil(attributes.targetMachines) * recipeRft;\r\n  });\r\n\r\n  return { machineTotals, machineSteps, rft, inputs, outputs };\r\n}\r\n\r\n/**\r\n * Determines the initial input requirements for a provided graph.\r\n *\r\n * @param {*} graph\r\n * @returns\r\n */\r\nfunction FindInitialInputs(graph) {\r\n  let inputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.inputs.forEach((input) => {\r\n      if (!(input.name in inputs)) {\r\n        inputs[input.name] = {\r\n          node: Number(node),\r\n          quantity: input.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in inputs) {\r\n          delete inputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return inputs.sort();\r\n}\r\n\r\n/**\r\n * Determines the final outputs for the provided graph.\r\n *\r\n * @param {*} graph\r\n * @returns\r\n */\r\nfunction FindFinalOutputs(graph) {\r\n  let outputs = [];\r\n\r\n  graph.forEachNode((node, attributes) => {\r\n    attributes.outputs.forEach((output) => {\r\n      if (!(output.name in outputs)) {\r\n        outputs[output.name] = {\r\n          node: Number(node),\r\n          quantity: output.quantity,\r\n          time: attributes.time,\r\n          targetMachines: attributes.targetMachines,\r\n        };\r\n      }\r\n    });\r\n\r\n    graph.forEachOutEdge(\r\n      (\r\n        edge,\r\n        attributes,\r\n        source,\r\n        target,\r\n        sourceAttributes,\r\n        targetAttributes\r\n      ) => {\r\n        if (attributes.name in outputs) {\r\n          delete outputs[attributes.name];\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  return outputs.sort();\r\n}\r\n\r\n/**\r\n * Calculates the number of machines required to satisfy a node's recipe.\r\n *\r\n * @param {*} graph\r\n * @param {*} sourceNode\r\n * @param {*} calculatorTargetMachines\r\n * @returns\r\n */\r\nfunction CalculateTarget(graph, sourceNode, calculatorTargetMachines) {\r\n  let sourceAttributes = graph.getNodeAttributes(sourceNode);\r\n  if (typeof calculatorTargetMachines !== 'undefined') {\r\n    graph.setNodeAttribute(\r\n      sourceNode,\r\n      'targetMachines',\r\n      calculatorTargetMachines\r\n    );\r\n  }\r\n\r\n  graph.forEachOutNeighbor(sourceNode, (targetNode, targetAttributes) => {\r\n    let edges = graph.edges(sourceNode, targetNode);\r\n\r\n    edges.forEach((edge) => {\r\n      let edgeAttributes = graph.getEdgeAttributes(edge);\r\n      let inBPS =\r\n        (edgeAttributes.inputQuantity / edgeAttributes.inputTime) *\r\n        sourceAttributes.targetMachines;\r\n      let outBPS = edgeAttributes.outputQuantity / edgeAttributes.outputTime;\r\n      let targetMachines = inBPS / outBPS;\r\n\r\n      if (\r\n        graph.getNodeAttribute(targetNode, 'visitedCount') > 0 &&\r\n        graph.inDegree(targetNode) > 1\r\n      ) {\r\n        graph.updateNodeAttribute(\r\n          targetNode,\r\n          'targetMachines',\r\n          (n) => n + targetMachines\r\n        );\r\n        graph.updateNodeAttribute(targetNode, 'visitedCount', (n) => n + 1);\r\n      } else {\r\n        graph.setNodeAttribute(targetNode, 'targetMachines', targetMachines);\r\n        graph.setNodeAttribute(targetNode, 'visitedCount', 1);\r\n      }\r\n    });\r\n\r\n    return CalculateTarget(graph, targetNode);\r\n  });\r\n\r\n  return graph;\r\n}\r\n\r\nexport { GenerateGraph, MachineRequirements, CalculateTarget };\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          A production chain calculator inspired by the{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://kirkmcdonald.github.io/\">\r\n            Kirk McDonald calculator\r\n          </Link>{' '}\r\n          for Factorio. Please ask questions and report bugs at{' '}\r\n          <Link\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://github.com/SimonNguyen/ProductionChain\">\r\n            GitHub\r\n          </Link>\r\n          .\r\n          <br />\r\n          <br />\r\n          Shortcuts: <br />\r\n          <code>ESC</code> closes dialog menus.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { compress, decompress } from 'lzutf8';\r\nimport { Recipes } from '../../data';\r\n\r\nconst ImportExportMenu = React.memo(function ImportExportMenu(props) {\r\n  const [data, setData] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleImport = () => {\r\n    let array = data.split(',');\r\n    let uint8array = Uint8Array.from(array);\r\n    let recipes = JSON.parse(decompress(uint8array));\r\n    props.handleUpdate(recipes);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    let jString = JSON.stringify(props.recipes);\r\n    let compressedData = compress(jString);\r\n    setData(compressedData.toString());\r\n  };\r\n\r\n  const handleDefaultImport = () => {\r\n    let recipes = Recipes;\r\n    props.handleUpdate(recipes);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Paste a recipe string below to import a recipe.\r\n          <br />\r\n          <br />\r\n          Alternatively, you may import a sample recipe:\r\n        </DialogContentText>\r\n        <Button\r\n          onClick={handleDefaultImport}\r\n          color=\"default\"\r\n          variant=\"outlined\">\r\n          Numismatic Generators\r\n        </Button>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          size=\"medium\"\r\n          rowsMax=\"10\"\r\n          variant=\"outlined\"\r\n          value={data}\r\n          onChange={handleChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleImport} color=\"default\">\r\n          Import\r\n        </Button>\r\n        <Button onClick={handleExport} color=\"default\">\r\n          Export\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ImportExportMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ClearMenu = React.memo(function ClearMenu(props) {\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => props.handleClear()} color=\"default\">\r\n            Accept\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ClearMenu;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n});\r\n\r\nconst regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\nconst regWholeNumber = /^\\d+$/;\r\n\r\nclass RecipeRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.unitLabelRef = React.createRef();\r\n    this.state = {\r\n      unitLabelWidth: 0,\r\n      item: this.props.item,\r\n    };\r\n  }\r\n\r\n  handleQuantity = (event) => {\r\n    const value = Number(event.target.value);\r\n    if (value >= 1 && regWholeNumber.test(value)) {\r\n      let item = this.state.item;\r\n      item.quantity = value;\r\n      this.setState({ item });\r\n      this.props.handleUpdateItems(this.props.id, this.state.item);\r\n    }\r\n  };\r\n\r\n  handleUnit = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.unit = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  handleName = (event) => {\r\n    const value = event.target.value;\r\n    let item = this.state.item;\r\n    item.name = value;\r\n    this.setState({ item });\r\n    this.props.handleUpdateItems(this.props.id, this.state.item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ unitLabelWidth: this.unitLabelRef.current.offsetWidth });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormControl className={this.props.classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(this.props.item.quantity)}\r\n            label=\"Quantity\"\r\n            required\r\n            type=\"number\"\r\n            value={this.state.item.quantity.toString()}\r\n            variant=\"outlined\"\r\n            onChange={this.handleQuantity}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className={this.props.classes.formControlSmall}>\r\n          <InputLabel ref={this.unitLabelRef}>Unit</InputLabel>\r\n          <Select\r\n            labelWidth={this.state.unitLabelWidth}\r\n            label=\"Unit\"\r\n            placeholder=\"b\"\r\n            value={this.state.item.unit}\r\n            onChange={this.handleUnit}>\r\n            <MenuItem value=\"b\">b</MenuItem>\r\n            <MenuItem value=\"mb\">mb</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={this.props.classes.formControl}>\r\n          <TextField\r\n            error={this.props.item.name.length === 0}\r\n            label=\"Item Name\"\r\n            required\r\n            type=\"string\"\r\n            value={this.state.item.name}\r\n            variant=\"outlined\"\r\n            onChange={this.handleName}\r\n          />\r\n        </FormControl>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RecipeRow);\r\n","export function pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n  return newArray;\r\n}\r\n\r\nexport function newRecipe(\r\n  isEu,\r\n  step,\r\n  machineName,\r\n  machineTier,\r\n  overclock,\r\n  rft,\r\n  time,\r\n  inputs,\r\n  outputs\r\n) {\r\n  let recipe = {\r\n    step: step,\r\n    machineName: machineName,\r\n    machineTier: machineTier,\r\n    overclock: overclock,\r\n    rft: isEu ? rft * 4 : rft,\r\n    time: time,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    targetMachines: 1,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Infinite from 'react-infinite';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\nimport { pushDefault, newRecipe } from '../utils/helper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nconst RecipeMenu = React.memo(function RecipeMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState('');\r\n  const [machineTier, setMachineTier] = React.useState(0);\r\n  const [overclock, setOverclock] = React.useState(false);\r\n  const [rft, setRft] = React.useState(0);\r\n  const [time, setTime] = React.useState(0);\r\n  const [numInputs, setNumInputs] = React.useState(1);\r\n  const [numOutputs, setNumOutputs] = React.useState(1);\r\n  const [valid, setValid] = React.useState(false);\r\n  const [validName, setValidName] = React.useState(false);\r\n  const [validInputs, setValidInputs] = React.useState(false);\r\n  const [validOutputs, setValidOutputs] = React.useState(false);\r\n\r\n  const [inputs, setInputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n  const [outputs, setOutputs] = React.useState([\r\n    { name: '', quantity: 1, unit: 'b' },\r\n  ]);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumRft = (value) => {\r\n    if (value >= 0) {\r\n      setRft(value);\r\n    }\r\n  };\r\n\r\n  const handleNumTime = (value) => {\r\n    if (value >= 0) {\r\n      setTime(value);\r\n    }\r\n  };\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n      setValidInputs(false);\r\n    }\r\n\r\n    handleValidation('inputs', false);\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n      setValidOutputs(false);\r\n    }\r\n\r\n    handleValidation('outputs', false);\r\n  };\r\n\r\n  const handleUpdateMachineName = (value) => {\r\n    setMachineName(value);\r\n\r\n    let validName = value.length !== 0;\r\n\r\n    setValidName(validName);\r\n    handleValidation('machineName', validName);\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n\r\n    let validInputs = true;\r\n    newInputs.forEach((input) => {\r\n      if (input.name.length === 0) {\r\n        validInputs = validInputs && false;\r\n      }\r\n    });\r\n\r\n    setValidInputs(validInputs);\r\n    handleValidation('inputs', validInputs);\r\n  };\r\n\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = outputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n\r\n    let validOutputs = true;\r\n    outputs.forEach((output) => {\r\n      if (output.name.length === 0) {\r\n        validOutputs = validOutputs && false;\r\n      }\r\n    });\r\n\r\n    setValidOutputs(validOutputs);\r\n    handleValidation('outputs', validOutputs);\r\n  };\r\n\r\n  const handleValidation = (type, value) => {\r\n    if (type === 'machineName') {\r\n      setValid(value && validInputs && validOutputs);\r\n    } else if (type === 'inputs') {\r\n      setValid(validName && value && validOutputs);\r\n    } else if (type === 'outputs') {\r\n      setValid(validName && validInputs && value);\r\n    } else {\r\n      setValid(validName && validInputs && validOutputs);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRecipes = () => {\r\n    let recipes = props.recipes;\r\n    let index = recipes.length;\r\n\r\n    recipes.push(\r\n      newRecipe(\r\n        isEu,\r\n        index,\r\n        machineName,\r\n        machineTier,\r\n        overclock,\r\n        rft,\r\n        time,\r\n        inputs,\r\n        outputs\r\n      )\r\n    );\r\n\r\n    props.handleUpdate(recipes);\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdateMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                inputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : inputs.length === 0\r\n                  ? 72\r\n                  : inputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {inputs.map((input, index) => (\r\n                <RecipeRow\r\n                  key={'input' + index}\r\n                  id={index}\r\n                  item={input}\r\n                  handleUpdateItems={handleUpdateInputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                outputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : outputs.length === 0\r\n                  ? 72\r\n                  : outputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {outputs.map((output, index) => (\r\n                <RecipeRow\r\n                  key={'output' + index}\r\n                  id={index}\r\n                  item={output}\r\n                  handleUpdateItems={handleUpdateOutputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleUpdateRecipes} color=\"default\" disabled={!valid}>\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RecipeMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MachineRequirements, CalculateTarget } from '../utils/graph';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CalculatorMenu = React.memo(function CalculatorMenu(props) {\r\n  const classes = useStyles();\r\n  const [requirements, setRequirements] = React.useState(\r\n    MachineRequirements(props.recipes, props.graph)\r\n  );\r\n  const [targetMachines, setTargetMachines] = React.useState(1);\r\n  const [targetItem, setTargetItem] = React.useState(\r\n    Object.keys(requirements.outputs).length !== 0\r\n      ? Object.keys(requirements.outputs)[0]\r\n      : ''\r\n  );\r\n  const [targetQuantity, setTargetQuantity] = React.useState(\r\n    Object.keys(requirements.outputs).length !== 0\r\n      ? requirements.outputs[targetItem].quantity\r\n      : 0\r\n  );\r\n  const [targetRatio, setTargetRatio] = React.useState(\r\n    Object.keys(requirements.outputs).length !== 0\r\n      ? targetQuantity / requirements.outputs[targetItem].time\r\n      : 0\r\n  );\r\n  const [targetOps, setTargetOps] = React.useState(targetRatio);\r\n  const [targetStored, setTargetStored] = React.useState([]);\r\n  const [targetLabelWidth, setTargetLabelWidth] = React.useState(0);\r\n\r\n  const targetLabel = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (props.recipes.length !== 0) {\r\n      setTargetLabelWidth(targetLabel.current.offsetWidth);\r\n    }\r\n  }, [props.recipes.length]);\r\n\r\n  const handleOps = (value) => {\r\n    setTargetOps(value);\r\n    setTargetMachines(value / targetRatio);\r\n  };\r\n\r\n  const handleMachines = (value) => {\r\n    setTargetMachines(value);\r\n    setTargetOps(value * targetRatio);\r\n  };\r\n\r\n  const handleItem = (value) => {\r\n    let quantity = requirements.outputs[value].quantity;\r\n    setTargetItem(value);\r\n    setTargetQuantity(quantity);\r\n    setTargetRatio(quantity / requirements.outputs[value].time);\r\n\r\n    if (typeof targetStored[value] !== 'undefined') {\r\n      setTargetOps(targetStored[value].targetOps);\r\n      setTargetMachines(targetStored[value].targetMachines);\r\n    }\r\n  };\r\n\r\n  const handleTarget = () => {\r\n    props.graph.setNodeAttribute(\r\n      requirements.outputs[targetItem].node,\r\n      'targetMachines',\r\n      targetMachines\r\n    );\r\n\r\n    let targets = targetStored;\r\n    targets[targetItem] = {\r\n      targetOps: targetOps,\r\n      targetMachines: targetMachines,\r\n    };\r\n    setTargetStored(targets);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    let calculatedGraph = props.graph.copy();\r\n    Object.entries(requirements.outputs)\r\n      .sort()\r\n      .forEach(([key, value]) => CalculateTarget(calculatedGraph, value.node));\r\n\r\n    setRequirements(MachineRequirements(props.recipes, calculatedGraph));\r\n  };\r\n\r\n  const regAnyPositiveNumber = /^\\d+\\.?\\d*$/;\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        {props.recipes.length !== 0 ? (\r\n          <>\r\n            <DialogContentText>\r\n              The default setting for the calculator is a single machine\r\n              producing the final product. If you require more or less product,\r\n              adjust the machines or outputs per second. Once you have set\r\n              custom targets, press the 'calculate' button to redetermine the\r\n              requirements for the recipe.\r\n            </DialogContentText>\r\n            <Grid container direction=\"row\" alignItems=\"center\">\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  error={\r\n                    !regAnyPositiveNumber.test(targetOps) || targetOps === 0\r\n                  }\r\n                  label=\"Output per second\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetOps}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) => handleOps(Number(event.target.value))}\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <TextField\r\n                  error={\r\n                    !regAnyPositiveNumber.test(targetMachines) ||\r\n                    targetMachines === 0\r\n                  }\r\n                  label=\"Number of machines\"\r\n                  placeholder=\"1\"\r\n                  required\r\n                  type=\"number\"\r\n                  value={targetMachines}\r\n                  variant=\"outlined\"\r\n                  onChange={(event) =>\r\n                    handleMachines(Number(event.target.value))\r\n                  }\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel ref={targetLabel}>Target Output</InputLabel>\r\n                <Select\r\n                  label=\"Target Output\"\r\n                  labelWidth={targetLabelWidth}\r\n                  value={targetItem}\r\n                  onChange={(event) => handleItem(event.target.value)}>\r\n                  {Object.entries(requirements.outputs)\r\n                    .sort()\r\n                    .map(([key, value]) => (\r\n                      <MenuItem key={'select' + key} value={key}>\r\n                        {key}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n              <div>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleTarget}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Set Target\r\n                </Button>\r\n                <Button\r\n                  className={classes.margin}\r\n                  onClick={handleCalculate}\r\n                  color=\"default\"\r\n                  variant=\"outlined\">\r\n                  Calculate\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <Divider style={{ margin: '12px 0' }} />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machines per Step</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <DialogContentText>Machine Totals</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Inputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Outputs/s</DialogContentText>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <DialogContentText>Power Consumed</DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignitems=\"center\">\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineSteps).map(\r\n                  ([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      Step {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  )\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {Object.entries(requirements.machineTotals)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} : {value} <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.inputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {Object.entries(requirements.outputs)\r\n                  .sort()\r\n                  .map(([key, value]) => (\r\n                    <React.Fragment key={key}>\r\n                      {key} :{' '}\r\n                      {(\r\n                        (value.quantity / value.time) *\r\n                        value.targetMachines\r\n                      ).toFixed(2)}\r\n                      <br />\r\n                    </React.Fragment>\r\n                  ))}\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                RF/t: {requirements.rft} <br />\r\n                EU/t: {requirements.rft / 4}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <DialogContentText>\r\n            No recipe information to calculate.\r\n          </DialogContentText>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CalculatorMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Infinite from 'react-infinite';\r\nimport RecipeRow from './RecipeRow';\r\n\r\nimport { TierNames } from '../../data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  formControlSmall: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 100,\r\n  },\r\n}));\r\n\r\nfunction pushDefault(array, n) {\r\n  let newArray = array;\r\n  if (array.length < n) {\r\n    for (let i = array.length; i < n; i++) {\r\n      newArray.push({ name: '', quantity: 1, unit: 'b' });\r\n    }\r\n  } else {\r\n    newArray = newArray.slice(0, n);\r\n  }\r\n\r\n  return newArray;\r\n}\r\n\r\nfunction updatedRecipe(\r\n  isEu,\r\n  step,\r\n  machineName,\r\n  machineTier,\r\n  overclock,\r\n  rft,\r\n  time,\r\n  inputs,\r\n  outputs\r\n) {\r\n  let recipe = {\r\n    step: step,\r\n    machineName: machineName,\r\n    machineTier: machineTier,\r\n    overclock: overclock,\r\n    rft: isEu ? rft * 4 : rft,\r\n    time: time,\r\n    inputs: inputs,\r\n    outputs: outputs,\r\n    targetMachines: 1,\r\n  };\r\n\r\n  return recipe;\r\n}\r\n\r\nconst EditMenu = React.memo(function EditMenu(props) {\r\n  const classes = useStyles();\r\n  const [isEu, setIsEu] = React.useState(false);\r\n  const [machineName, setMachineName] = React.useState(\r\n    props.rowData.machineName\r\n  );\r\n  const [machineTier, setMachineTier] = React.useState(\r\n    props.rowData.machineTier\r\n  );\r\n  const [overclock, setOverclock] = React.useState(props.rowData.overclock);\r\n  const [rft, setRft] = React.useState(props.rowData.rft);\r\n  const [time, setTime] = React.useState(props.rowData.time);\r\n  const [numInputs, setNumInputs] = React.useState(props.rowData.inputs.length);\r\n  const [numOutputs, setNumOutputs] = React.useState(\r\n    props.rowData.outputs.length\r\n  );\r\n  const [inputs, setInputs] = React.useState(\r\n    props.rowData.inputs.slice(0, props.rowData.inputs.length)\r\n  );\r\n  const [outputs, setOutputs] = React.useState(\r\n    props.rowData.outputs.slice(0, props.rowData.outputs.length)\r\n  );\r\n  const [valid, setValid] = React.useState(true);\r\n  const [validName, setValidName] = React.useState(false);\r\n  const [validInputs, setValidInputs] = React.useState(false);\r\n  const [validOutputs, setValidOutputs] = React.useState(false);\r\n\r\n  const regAnyNumber = /^-?\\d+\\.?\\d*$/;\r\n  const regWholeNumber = /^\\d+$/;\r\n\r\n  const tierLabel = React.useRef(null);\r\n  const [tierLabelWidth, setTierLabelWidth] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setTierLabelWidth(tierLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleNumRft = (value) => {\r\n    if (value >= 0) {\r\n      setRft(value);\r\n    }\r\n  };\r\n\r\n  const handleNumTime = (value) => {\r\n    if (value >= 0) {\r\n      setTime(value);\r\n    }\r\n  };\r\n\r\n  const handleNumInputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumInputs(value);\r\n      setInputs((prevInputs) => pushDefault(prevInputs, value));\r\n      setValidInputs(false);\r\n    }\r\n\r\n    handleValidation('inputs', false);\r\n  };\r\n\r\n  const handleNumOutputs = (value) => {\r\n    if (value >= 0 && regWholeNumber.test(value)) {\r\n      setNumOutputs(value);\r\n      setOutputs((prevOutputs) => pushDefault(prevOutputs, value));\r\n      setValidOutputs(false);\r\n    }\r\n\r\n    handleValidation('outputs', false);\r\n  };\r\n\r\n  const handleUpdateMachineName = (value) => {\r\n    setMachineName(value);\r\n\r\n    let validName = value.length !== 0;\r\n\r\n    setValidName(validName);\r\n    handleValidation('machineName', validName);\r\n  };\r\n\r\n  const handleUpdateInputs = (id, item) => {\r\n    let newInputs = inputs;\r\n    newInputs[id] = item;\r\n    setInputs(newInputs);\r\n\r\n    let validInputs = true;\r\n    newInputs.forEach((input) => {\r\n      if (input.name.length === 0) {\r\n        validInputs = validInputs && false;\r\n      }\r\n    });\r\n\r\n    setValidInputs(validInputs);\r\n    handleValidation('inputs', validInputs);\r\n  };\r\n\r\n  const handleUpdateOutputs = (id, item) => {\r\n    let newOutputs = outputs;\r\n    newOutputs[id] = item;\r\n    setOutputs(newOutputs);\r\n\r\n    let validOutputs = true;\r\n    outputs.forEach((output) => {\r\n      if (output.name.length === 0) {\r\n        validOutputs = validOutputs && false;\r\n      }\r\n    });\r\n\r\n    setValidOutputs(validOutputs);\r\n    handleValidation('outputs', validOutputs);\r\n  };\r\n\r\n  const handleValidation = (type, value) => {\r\n    if (type === 'machineName') {\r\n      setValid(value && validInputs && validOutputs);\r\n    } else if (type === 'inputs') {\r\n      setValid(validName && value && validOutputs);\r\n    } else if (type === 'outputs') {\r\n      setValid(validName && validInputs && value);\r\n    } else {\r\n      setValid(validName && validInputs && validOutputs);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRecipes = () => {\r\n    let recipes = props.recipes;\r\n    let index = recipes.indexOf(props.rowData);\r\n\r\n    if (valid) {\r\n      recipes[index] = updatedRecipe(\r\n        isEu,\r\n        props.rowData.step,\r\n        machineName,\r\n        machineTier,\r\n        overclock,\r\n        rft,\r\n        time,\r\n        inputs,\r\n        outputs\r\n      );\r\n      props.handleUpdate(recipes);\r\n      props.handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Recipe information:</DialogContentText>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            label=\"Machine Name\"\r\n            error={machineName.length === 0}\r\n            placeholder=\"Macerator\"\r\n            required\r\n            value={machineName}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleUpdateMachineName(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel ref={tierLabel}>Machine Tier</InputLabel>\r\n          <Select\r\n            label=\"Machine Tier\"\r\n            labelWidth={tierLabelWidth}\r\n            value={machineTier}\r\n            onChange={(event) => setMachineTier(event.target.value)}>\r\n            {TierNames.map((tier, index) => (\r\n              <MenuItem key={index} value={index}>\r\n                {tier}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={overclock === true}\r\n              onChange={() => setOverclock(!overclock)}\r\n              value={overclock}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Overclock\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(rft)}\r\n            label={isEu ? 'EU/t' : 'RF/t'}\r\n            placeholder={rft.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={rft}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumRft(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isEu === true}\r\n              onChange={() => setIsEu(!isEu)}\r\n              value={isEu}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Use EU/t\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regAnyNumber.test(time)}\r\n            label=\"Time (s)\"\r\n            placeholder={time.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={time}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumTime(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numInputs)}\r\n            label=\"# Inputs\"\r\n            placeholder={numInputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numInputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumInputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControlSmall}>\r\n          <TextField\r\n            error={!regWholeNumber.test(numOutputs)}\r\n            label=\"# Outputs\"\r\n            placeholder={numOutputs.toString()}\r\n            required\r\n            type=\"number\"\r\n            value={numOutputs}\r\n            variant=\"outlined\"\r\n            onChange={(event) => handleNumOutputs(Number(event.target.value))}\r\n          />\r\n        </FormControl>\r\n\r\n        <Divider style={{ margin: '12px 0' }} />\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Inputs: {inputs.length === 0 ? 'This recipe has no inputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DialogContentText>\r\n              Outputs:\r\n              {outputs.length === 0 ? ' This recipe has no outputs.' : ''}\r\n            </DialogContentText>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignitems=\"center\">\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                inputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : inputs.length === 0\r\n                  ? 72\r\n                  : inputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {inputs.map((input, index) => (\r\n                <RecipeRow\r\n                  key={'input' + index}\r\n                  id={index}\r\n                  item={input}\r\n                  handleUpdateItems={handleUpdateInputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Infinite\r\n              containerHeight={\r\n                outputs.length * 72 > (window.innerHeight * 3) / 5\r\n                  ? (window.innerHeight * 3) / 5\r\n                  : outputs.length === 0\r\n                  ? 72\r\n                  : outputs.length * 72\r\n              }\r\n              elementHeight={72}>\r\n              {outputs.map((output, index) => (\r\n                <RecipeRow\r\n                  key={'output' + index}\r\n                  id={index}\r\n                  item={output}\r\n                  handleUpdateItems={handleUpdateOutputs}\r\n                />\r\n              ))}\r\n            </Infinite>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleUpdateRecipes} color=\"default\" disabled={!valid}>\r\n          Save\r\n        </Button>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EditMenu;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SettingsMenu = React.memo(function SettingsMenu(props) {\r\n  const [state, setState] = React.useState({\r\n    checked: props.themeType === 'dark' ? true : false,\r\n  });\r\n\r\n  const handleChange = (name) => (event) => {\r\n    props.handleTheme();\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{props.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\">\r\n          <Typography color={'textPrimary'} variant=\"subtitle1\">\r\n            Dark Theme\r\n          </Typography>\r\n          <Switch checked={state.checked} onChange={handleChange('checked')} />\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"default\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SettingsMenu;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nimport AboutMenu from './AboutMenu';\r\nimport ImportExportMenu from './ImportExportMenu';\r\nimport ClearMenu from './ClearMenu';\r\nimport RecipeMenu from './RecipeMenu';\r\nimport CalculatorMenu from './CalculatorMenu';\r\nimport EditMenu from './EditMenu';\r\nimport SettingsMenu from './SettingsMenu';\r\n\r\nconst MenuDialog = ({\r\n  contentType,\r\n  graph,\r\n  isOpen,\r\n  recipes,\r\n  rowData,\r\n  size,\r\n  themeType,\r\n  title,\r\n  handleClose,\r\n  handleClear,\r\n  handleTheme,\r\n  handleUpdate,\r\n}) => {\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick={\r\n        contentType === 'add' || contentType === 'calculator'\r\n      }\r\n      fullScreen={contentType === 'chart'}\r\n      fullWidth\r\n      maxWidth={size}\r\n      open={isOpen}\r\n      onClose={handleClose}>\r\n      {contentType === 'about' ? (\r\n        <AboutMenu title={title} handleClose={handleClose} />\r\n      ) : contentType === 'import' ? (\r\n        <ImportExportMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n          recipes={recipes}\r\n        />\r\n      ) : contentType === 'clear' ? (\r\n        <ClearMenu\r\n          title={title}\r\n          handleClear={handleClear}\r\n          handleClose={handleClose}\r\n        />\r\n      ) : contentType === 'add' ? (\r\n        <RecipeMenu\r\n          title={title}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : contentType === 'settings' ? (\r\n        <SettingsMenu\r\n          title={title}\r\n          handleClose={handleClose}\r\n          handleTheme={handleTheme}\r\n          themeType={themeType}\r\n        />\r\n      ) : contentType === 'calculator' ? (\r\n        <CalculatorMenu\r\n          title={title}\r\n          graph={graph}\r\n          recipes={recipes}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : contentType === 'edit' ? (\r\n        <EditMenu\r\n          title={title}\r\n          recipes={recipes}\r\n          rowData={rowData}\r\n          handleEdit={handleClose}\r\n          handleClose={handleClose}\r\n          handleUpdate={handleUpdate}\r\n        />\r\n      ) : (\r\n        <DialogContentText>No valid content type selected.</DialogContentText>\r\n      )}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MenuDialog;\r\n","import React from 'react';\r\nexport function DataTableCell(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.items.map((item) => (\r\n        <div key={'_' + props.type + item.name + props.step}>\r\n          {item.quantity + item.unit + ' ' + item.name}\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import DataTable from './DataTable';\r\n\r\nexport default DataTable;\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { TierNames } from '../../data';\r\nimport MenuDialog from '../menus/MenuDialog';\r\nimport { DataTableCell } from './DataTableCell';\r\n\r\nclass DataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: 'Step',\r\n          field: 'step',\r\n          readonly: true,\r\n          editable: 'never',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Machine Name',\r\n          field: 'machineName',\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Machine Tier',\r\n          field: 'machineTier',\r\n          lookup: Object.assign({}, TierNames),\r\n          width: 200,\r\n        },\r\n        {\r\n          title: 'Overclock',\r\n          field: 'overclock',\r\n          type: 'boolean',\r\n          customFilterAndSearch: (search, rowData) => {\r\n            return (\r\n              rowData.overclock.toString().toUpperCase() ===\r\n              search.toUpperCase()\r\n            );\r\n          },\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'RF/t',\r\n          field: 'rft',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Time (s)',\r\n          field: 'time',\r\n          type: 'numeric',\r\n          width: 100,\r\n        },\r\n        {\r\n          title: 'Base Inputs',\r\n          field: 'inputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.inputs}\r\n              step={rowData.step}\r\n              type={'input'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.inputs.forEach((input) => {\r\n              let values = Object.values(input);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n        {\r\n          title: 'Base Outputs',\r\n          field: 'outputs',\r\n          render: (rowData) => (\r\n            <DataTableCell\r\n              items={rowData.outputs}\r\n              step={rowData.step}\r\n              type={'output'}\r\n            />\r\n          ),\r\n          editComponent: () => <Button variant=\"outlined\">Modify</Button>,\r\n          customFilterAndSearch: (search, rowData) => {\r\n            let found = false;\r\n            rowData.outputs.forEach((output) => {\r\n              let values = Object.values(output);\r\n              values.forEach((value) => {\r\n                if (\r\n                  value\r\n                    .toString()\r\n                    .toUpperCase()\r\n                    .includes(search.toUpperCase())\r\n                ) {\r\n                  found = found || true;\r\n                }\r\n              });\r\n            });\r\n\r\n            return found;\r\n          },\r\n        },\r\n      ],\r\n      recipes: Array.from(this.props.recipes),\r\n      dialog: false,\r\n      editable: [],\r\n    };\r\n  }\r\n\r\n  handleDialogOpen = (rowData) => {\r\n    this.setState({ editable: rowData });\r\n    this.setState({ dialog: true });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ dialog: false });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!isEqual(prevState.recipes, this.state.recipes)) {\r\n      this.setState({ recipes: Array.from(this.props.recipes) });\r\n    }\r\n    if (!isEqual(this.props.recipes, this.state.recipes)) {\r\n      this.setState({ recipes: Array.from(this.props.recipes) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper variant=\"outlined\" my={2}>\r\n        <MaterialTable\r\n          actions={[\r\n            {\r\n              icon: 'arrow_upward',\r\n              tooltip: 'Move up',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index > 0) {\r\n                  let temp = recipes[index - 1];\r\n                  recipes[index - 1] = recipes[index];\r\n                  recipes[index - 1].step = index - 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'arrow_downward',\r\n              tooltip: 'Move down',\r\n              onClick: (event, rowData) => {\r\n                let recipes = [...this.state.recipes];\r\n                let index = recipes.indexOf(rowData);\r\n\r\n                if (index < recipes.length - 1) {\r\n                  let temp = recipes[index + 1];\r\n                  recipes[index + 1] = recipes[index];\r\n                  recipes[index + 1].step = index + 1;\r\n                  recipes[index] = temp;\r\n                  recipes[index].step = index;\r\n                }\r\n\r\n                this.setState({ recipes });\r\n                this.props.handleUpdate(recipes);\r\n              },\r\n            },\r\n            {\r\n              icon: 'edit',\r\n              tooltip: 'Edit Recipe',\r\n              onClick: (event, rowData) => {\r\n                this.handleDialogOpen(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          columns={this.state.columns}\r\n          data={Array.from(this.props.recipes)}\r\n          editable={{\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  {\r\n                    let recipes = [...this.state.recipes];\r\n                    recipes.splice(oldData.step, 1);\r\n\r\n                    recipes.forEach((recipe, index) => {\r\n                      recipe.step = index;\r\n                    });\r\n\r\n                    this.setState({ recipes }, () => resolve());\r\n                    this.props.handleUpdate(recipes);\r\n                  }\r\n                  resolve();\r\n                }, 0);\r\n              }),\r\n          }}\r\n          localization={{\r\n            body: { emptyDataSourceMessage: 'No recipes to display' },\r\n          }}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: '77vh',\r\n            paging: true,\r\n            pageSizeOptions: [5, 10, 15, 20],\r\n            showTitle: false,\r\n            sorting: false,\r\n            tableLayout: 'auto',\r\n          }}\r\n        />\r\n        <MenuDialog\r\n          contentType={'edit'}\r\n          size={'lg'}\r\n          title={'Edit a recipe'}\r\n          recipes={this.state.recipes}\r\n          rowData={this.state.editable}\r\n          isOpen={this.state.dialog}\r\n          handleClose={this.handleDialogClose}\r\n          handleUpdate={this.props.handleUpdate}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport MenuDialog from './menus/MenuDialog';\r\n\r\nconst NavContent = React.memo(function NavContent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [size, setSize] = React.useState('xs');\r\n\r\n  const handleDialogOpen = (type, title, size) => {\r\n    setSize(size);\r\n    setTitle(title);\r\n    setType(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    props.handleClear();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('about', 'About', 'xs')}>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'About'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen('import', 'Import or export a recipe list', 'sm')\r\n          }>\r\n          <ListItemIcon>\r\n            <ImportExportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Import/Export Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'clear',\r\n              'Are you sure you want to clear all recipes?',\r\n              'xs'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <DeleteForeverIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Clear All Recipes'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('add', 'Add a recipe', 'lg')}>\r\n          <ListItemIcon>\r\n            <AddIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Add Recipe'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() =>\r\n            handleDialogOpen(\r\n              'calculator',\r\n              'Calculated requirements for this recipe',\r\n              'lg'\r\n            )\r\n          }>\r\n          <ListItemIcon>\r\n            <FunctionsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Calculator'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n        <Divider style={{ margin: '12px 0' }} />\r\n        <ListItem\r\n          button\r\n          onClick={() => handleDialogOpen('settings', 'Settings', 'xs')}>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={'Settings'}\r\n            primaryTypographyProps={{ noWrap: true }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <MenuDialog\r\n        contentType={type}\r\n        graph={props.graph}\r\n        recipes={props.recipes}\r\n        size={size}\r\n        themeType={props.themeType}\r\n        title={title}\r\n        isOpen={open}\r\n        handleClear={handleClear}\r\n        handleClose={handleDialogClose}\r\n        handleUpdate={props.handleUpdate}\r\n        handleTheme={props.handleTheme}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NavContent;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = () => ({\r\n  header: {\r\n    fontWeight: 700,\r\n    minWidth: 0,\r\n    fontSize: 18,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst url = window.location.href;\r\n\r\nconst HeaderContent = ({ classes }) => (\r\n  <Typography noWrap color={'textPrimary'} className={classes.header}>\r\n    <Link href={url.substring(0, url.indexOf('?'))} color=\"inherit\">\r\n      Production Chain\r\n    </Link>\r\n  </Typography>\r\n);\r\n\r\nexport default withStyles(styles)(HeaderContent);\r\n","import { TierNames, Voltages } from '../../data';\r\n/**\r\n * Adapted from GregTech Community Edition calculateOverclock function.\r\n * https://github.com/GregTechCE/GregTech/blob/master/src/main/java/gregtech/api/capability/impl/AbstractRecipeLogic.java\r\n * Returns object containing { rft: number, time: number }\r\n *\r\n * @param {Number} EUt - EU per tick\r\n * @param {Number} tierIndex - GregTech machine tier\r\n * @param {Number} duration - Recipe duration in ticks\r\n * @returns\r\n */\r\nfunction Overclock(EUt, tierIndex, duration) {\r\n  let tier = TierNames.indexOf(TierNames[tierIndex]) - 1;\r\n  let resultEUt = EUt;\r\n  let resultDuration = duration;\r\n  let multiplier = 0;\r\n\r\n  if (Voltages[tier] <= EUt || tier === 0 || tier === -1 || EUt === 0) {\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  }\r\n\r\n  if (EUt <= 16) {\r\n    if (EUt <= 8) {\r\n      multiplier = tier;\r\n    } else {\r\n      multiplier = tier - 1;\r\n    }\r\n\r\n    resultEUt = EUt * (1 << multiplier) * (1 << multiplier);\r\n    resultDuration = duration / (1 << multiplier);\r\n\r\n    return {\r\n      eut: resultEUt,\r\n      ticks: resultDuration,\r\n    };\r\n  } else {\r\n    while (resultDuration >= 3 && resultEUt <= Voltages[tierIndex - 1]) {\r\n      resultEUt = resultEUt * 4;\r\n      resultDuration = resultDuration / 2.8;\r\n    }\r\n  }\r\n\r\n  return {\r\n    eut: resultEUt,\r\n    ticks: Math.ceil(resultDuration),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns recipe list with overclocked values.\r\n *\r\n * @param {*} recipes - Array of recipe objects\r\n * @returns\r\n */\r\nfunction AddOverclock(recipes) {\r\n  recipes.forEach((recipe) => {\r\n    let oc = Overclock(recipe.rft / 4, recipe.machineTier, recipe.time);\r\n\r\n    recipe.rftoc = oc.eut * 4;\r\n    recipe.timeoc = oc.ticks;\r\n  });\r\n\r\n  return recipes;\r\n}\r\n\r\nexport { Overclock, AddOverclock };\r\n","import React, { Component } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  Root,\r\n  Header,\r\n  Sidebar,\r\n  CollapseBtn,\r\n  CollapseIcon,\r\n  Content,\r\n  SidebarTrigger,\r\n  SidebarTriggerIcon,\r\n  headerStyles,\r\n} from '@mui-treasury/layout';\r\nimport { DefaultTheme, Config } from './data';\r\nimport { GenerateGraph } from './components/utils/graph';\r\nimport DataTable from './components/DataTable';\r\nimport NavContent from './components/NavContent';\r\nimport HeaderContent from './components/HeaderContent';\r\n\r\nimport { AddOverclock } from './components/utils/overclock';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let themeType = window.localStorage.getItem('theme');\r\n    let collapsed = window.localStorage.getItem('collapsed');\r\n    let storedRecipes = JSON.parse(window.localStorage.getItem('recipes'));\r\n\r\n    if (themeType === null) {\r\n      window.localStorage.setItem('theme', 'dark');\r\n    } else if (themeType === 'light') {\r\n      DefaultTheme.palette.type = 'light';\r\n    } else if (themeType === 'dark') {\r\n      DefaultTheme.palette.type = 'dark';\r\n    }\r\n\r\n    if (collapsed === null) {\r\n      window.localStorage.setItem('collapsed', 'false');\r\n    }\r\n\r\n    if (storedRecipes === null) {\r\n      window.localStorage.setItem('recipes', '[]');\r\n      storedRecipes = [];\r\n    }\r\n\r\n    let recipes = AddOverclock(storedRecipes.slice(0, storedRecipes.length));\r\n    let graph = GenerateGraph(recipes);\r\n\r\n    this.state = {\r\n      theme: DefaultTheme,\r\n      headers: Headers,\r\n      recipes: recipes,\r\n      collapsed: collapsed === 'true',\r\n      graph: graph,\r\n    };\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let theme = this.state.theme;\r\n\r\n    if (theme.palette.type === 'light') {\r\n      window.localStorage.setItem('theme', 'dark');\r\n      theme.palette.type = 'dark';\r\n    } else {\r\n      window.localStorage.setItem('theme', 'light');\r\n      theme.palette.type = 'light';\r\n    }\r\n\r\n    this.setState({ theme });\r\n  };\r\n\r\n  handleCollapse = (collapsed) => {\r\n    window.localStorage.setItem('collapsed', !collapsed);\r\n    this.setState({ collapsed: !collapsed });\r\n  };\r\n\r\n  handleClear = () => {\r\n    let recipes = this.state.recipes;\r\n    recipes.length = 0;\r\n\r\n    this.setState({ recipes });\r\n    window.localStorage.setItem('recipes', JSON.stringify(recipes));\r\n  };\r\n\r\n  handleUpdate = (newRecipes) => {\r\n    let recipes = AddOverclock(newRecipes);\r\n    let graph = GenerateGraph(recipes);\r\n    this.setState({ recipes });\r\n    this.setState({ graph });\r\n    window.localStorage.setItem('recipes', JSON.stringify(recipes));\r\n  };\r\n\r\n  render() {\r\n    let muiTheme = createMuiTheme(this.state.theme);\r\n    return (\r\n      <MuiThemeProvider theme={muiTheme}>\r\n        <CssBaseline />\r\n        <Root\r\n          theme={muiTheme}\r\n          config={Config}\r\n          initialCollapsed={this.state.collapsed}>\r\n          {({ sidebarStyles, collapsed }) => (\r\n            <>\r\n              <Header>\r\n                <Toolbar>\r\n                  <SidebarTrigger className={headerStyles.leftTrigger}>\r\n                    <SidebarTriggerIcon />\r\n                  </SidebarTrigger>\r\n                  <HeaderContent />\r\n                </Toolbar>\r\n              </Header>\r\n              <Sidebar>\r\n                <div className={sidebarStyles.container}>\r\n                  <NavContent\r\n                    graph={this.state.graph}\r\n                    handleTheme={this.toggleDarkTheme}\r\n                    handleClear={this.handleClear}\r\n                    recipes={this.state.recipes}\r\n                    handleUpdate={this.handleUpdate}\r\n                    themeType={this.state.theme.palette.type}\r\n                  />\r\n                </div>\r\n                <CollapseBtn onClick={() => this.handleCollapse(collapsed)}>\r\n                  <CollapseIcon />\r\n                </CollapseBtn>\r\n              </Sidebar>\r\n              <Content>\r\n                <Container maxWidth=\"xl\">\r\n                  <Box my={2}>\r\n                    <DataTable\r\n                      recipes={this.state.recipes}\r\n                      handleUpdate={this.handleUpdate}\r\n                      onChangeOC={this.handleOverclock}\r\n                      onChangeTier={this.handleTier}\r\n                    />\r\n                  </Box>\r\n                </Container>\r\n              </Content>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}